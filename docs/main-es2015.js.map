{"version":3,"sources":["./src/app/nav-bar/nav-bar.component.ts","./src/app/nav-bar/nav-bar.component.html","./src/environments/environment.ts","./src/app/landing/landing.component.ts","./src/app/landing/landing.component.html","./src/app/post-brew/post-brew.component.ts","./src/app/post-brew/post-brew.component.html","./src/app/misc/misc.component.ts","./src/app/misc/misc.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/pre-brew/pre-brew.component.ts","./src/app/pre-brew/pre-brew.component.html","./src/app/corrections/corrections.component.ts","./src/app/corrections/corrections.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'nav-bar',\r\n  templateUrl: './nav-bar.component.html',\r\n  styleUrls: ['./nav-bar.component.css']\r\n})\r\nexport class NavBarComponent {\r\n}","<mat-toolbar color=\"primary\">\r\n    <span>Brew Sidekick</span>\r\n    <span></span>\r\n    <button mat-button [routerLink]=\"'pre-brew'\">\r\n        Pre Brew\r\n    </button>\r\n    <button mat-button [routerLink]=\"'post-brew'\">\r\n        Post Brew\r\n    </button>\r\n    <button mat-button [routerLink]=\"'corrections'\">\r\n        Corrections\r\n    </button>\r\n    <button mat-button [routerLink]=\"'misc'\">\r\n        Misc\r\n    </button>\r\n</mat-toolbar>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { Form, FormControl, FormGroup } from '@angular/forms';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\n\r\n@Component({\r\n    selector: \"app-landing\",\r\n    templateUrl: \"./landing.component.html\",\r\n    styleUrls: [\"./landing.component.css\"]\r\n})\r\nexport class LandingComponent implements OnInit {\r\n    \r\n    // Pre Brew Calculations\r\n    // - Strike Temp\r\n    // - Strike Vol\r\n    // - Abs Vol\r\n    // - First Runnings Vol\r\n    // - Sparge Vol\r\n    // - Est Pre Boil Grav\r\n    // - Pre Boil Vol\r\n    public targetMashTemp = 152.0;\r\n    public grainWeight = 10.0;\r\n    public absRate = 0.125;\r\n    public evapRate = 0.5;\r\n    public mashTunLoss = 0.21;\r\n    public targetOg = 1.060;\r\n    public batchVol = 5.0;\r\n    \r\n    public mashThickness: number; // .3125gal/lb\r\n    public grainTemp: number;\r\n    public strikeTemp: number; //(.2/(4*mashThickness))(targetMashTemp - grainTemp) + targetMashTemp\r\n    public strikeVol: number; // grainWeight*mashThickness\r\n    public absVol: number; // grainWeight * absRate\r\n    public preboilVol: number; // batchVol + evapRate * boilHrs\r\n    public firstRunningsVol: number; // strikeVol - (absVol + mashTunLoss)\r\n    public spargeVol: number; // preboilVol - firstRunningsVol\r\n    public estPreboilGrav: number; // (targetOg*targetVol)/preboilVol\r\n    \r\n    // Brew Corrections\r\n    // - Raise Pre Boil Grav\r\n    public collectedPreboilVol = 6.0;\r\n    public measuredGrav = 1.045;\r\n    public targetGrav = 1.065;\r\n    // Weight of addition = (Volume of wort * (Target gravity – Measured gravity)) / Extract potential points of addition\r\n    // Light DME Potential Extract: 1.045\r\n    public dmeAdd: number;\r\n    \r\n    // Volume Measuring\r\n    // Assuming holding pot and standing on scale\r\n    // 8.32lbs/gal = 1kg/L\r\n    // vol = (currWeight-emptyWeight)/(8.32*specificGrav)\r\n    public currWeight = 12.0;\r\n    public emptyWeight = 3.0;\r\n    public specificGrav = 1.061;\r\n    public currVol: number;\r\n    \r\n    // Post Brew Calculations\r\n    // - Efficiency\r\n    // - ABV\r\n    public potentialGrav = 1.084;\r\n    public measuredOG = 1.059;\r\n    public measuredFG = 1.060;\r\n    public efficiency: number;\r\n    public abv: number;\r\n\r\n    \r\n    public mainGroup: FormGroup;\r\n\r\n\r\n    constructor(private dialog: MatDialog){\r\n    }\r\n    \r\n    ngOnInit(): void {\r\n        this.mainGroup = new FormGroup({\r\n            preBrewCalcsFG: new FormGroup({\r\n                targetOg: new FormControl(this.targetOg),\r\n                batchVol: new FormControl(this.batchVol),\r\n                targetMashTemp: new FormControl(this.targetMashTemp),\r\n                grainWeight: new FormControl(this.grainWeight),\r\n                absRate: new FormControl(this.absRate),\r\n                mashTunLoss: new FormControl(this.mashTunLoss),\r\n                evapRate: new FormControl(this.evapRate),\r\n            }),\r\n            brewCorrectionsFG: new FormGroup({\r\n                collectedPreboilVol: new FormControl(this.collectedPreboilVol),\r\n                measuredGrav: new FormControl(this.measuredGrav),\r\n                targetGrav: new FormControl(this.targetGrav),\r\n            }),\r\n            volMeasuringFG: new FormGroup({\r\n                currWeight: new FormControl(this.currWeight),\r\n                emptyWeight: new FormControl(this.emptyWeight),\r\n                specificGrav: new FormControl(this.specificGrav),\r\n            }),\r\n            postBrewFG: new FormGroup({\r\n                potentialGrav: new FormControl(this.potentialGrav),\r\n                measuredOG: new FormControl(this.measuredOG),\r\n                measuredFG: new FormControl(this.measuredFG)\r\n            })\r\n        });\r\n        this.mashThickness = .3125;\r\n        this.grainTemp = 68;\r\n\r\n        this.mainGroup.valueChanges.subscribe(val => {\r\n            this.onChanges();\r\n        });\r\n\r\n        this.onChanges();\r\n    }\r\n\r\n    public onChanges = (): void => {\r\n\r\n        let vals = this.mainGroup.getRawValue();\r\n        this.targetMashTemp = vals.preBrewCalcsFG.targetMashTemp;\r\n        this.grainWeight = vals.preBrewCalcsFG.grainWeight;\r\n        this.batchVol = vals.preBrewCalcsFG.batchVol;\r\n        this.evapRate = vals.preBrewCalcsFG.evapRate;\r\n        this.absRate = vals.preBrewCalcsFG.absRate;\r\n        this.mashTunLoss = vals.preBrewCalcsFG.mashTunLoss;\r\n        this.targetOg = vals.preBrewCalcsFG.targetOg;\r\n        this.collectedPreboilVol = vals.brewCorrectionsFG.collectedPreboilVol;\r\n        this.targetGrav = vals.brewCorrectionsFG.targetGrav;\r\n        this.measuredGrav = vals.brewCorrectionsFG.measuredGrav;\r\n        this.currWeight = vals.volMeasuringFG.currWeight;\r\n        this.emptyWeight = vals.volMeasuringFG.emptyWeight;\r\n        this.specificGrav = vals.volMeasuringFG.specificGrav;\r\n        this.measuredOG = vals.postBrewFG.measuredOG;\r\n        this.measuredFG = vals.postBrewFG.measuredFG;\r\n        this.potentialGrav = vals.postBrewFG.potentialGrav;\r\n\r\n        this.strikeTemp = (.2/(4*this.mashThickness)) * (this.targetMashTemp - this.grainTemp) + this.targetMashTemp;\r\n        this.strikeVol = this.grainWeight * this.mashThickness;\r\n        this.absVol = this.grainWeight * this.absRate;\r\n        this.preboilVol = 0+this.batchVol + 1*this.evapRate;\r\n        this.firstRunningsVol = this.strikeVol - (this.absVol + this.mashTunLoss);\r\n        this.spargeVol = this.preboilVol - this.firstRunningsVol;\r\n        let targetSG = this.convertToPts(this.targetOg);\r\n        let preboilSG = (targetSG*this.batchVol)/this.preboilVol;\r\n        this.estPreboilGrav = this.convertToGrav(preboilSG);\r\n\r\n        // Weight of addition = (Volume of wort * (Target gravity – Measured gravity)) / Extract potential points of addition\r\n        this.dmeAdd = (this.collectedPreboilVol * (this.convertToPts(this.targetGrav) - this.convertToPts(this.measuredGrav)))/45;\r\n\r\n        this.currVol = (this.currWeight - this.emptyWeight)/(8.32 * this.specificGrav);\r\n\r\n        this.efficiency = (1.0-this.measuredOG)/(1.0-this.potentialGrav);\r\n        this.abv = (this.measuredOG-this.measuredFG) * 131.25;\r\n\r\n    };\r\n\r\n    public isGT(a: any, b: any): boolean {\r\n        return a > b;\r\n    }\r\n\r\n    public isLT(a: any, b: any): boolean {\r\n        return a < b;\r\n    }\r\n\r\n    private convertToPts(grav: number) {\r\n        return (grav-1.0) * 1000;\r\n    }\r\n\r\n    private convertToGrav(pts: number) {\r\n        return (pts/1000.0) + 1.0;\r\n    }\r\n}","<div [formGroup]=\"mainGroup\">\r\n\r\n    <mat-toolbar color=\"primary\">\r\n        <span>Pre Brew Calculations:</span>\r\n    </mat-toolbar>\r\n\r\n    <mat-card>\r\n        \r\n        <div>\r\n            <div formGroupName=\"preBrewCalcsFG\">\r\n                <mat-form-field>\r\n                    <mat-label>Target Mash Temp (Farenheit):</mat-label>\r\n                    <input matInput type=\"number\" formControlName=\"targetMashTemp\">\r\n                </mat-form-field>\r\n                \r\n                <mat-form-field>\r\n                    <mat-label>Grain Weight (lbs.):</mat-label>\r\n                    <input matInput type=\"number\" formControlName=\"grainWeight\">\r\n                </mat-form-field>\r\n                \r\n                <mat-form-field>\r\n                    <mat-label>Estimated Absorption Rate (gal/lb):</mat-label>\r\n                    <input matInput type=\"number\" step=\".1\" formControlName=\"absRate\">\r\n                </mat-form-field>\r\n                \r\n                <mat-form-field>\r\n                    <mat-label>Estimated Evaporation Rate (gal/hr):</mat-label>\r\n                    <input matInput type=\"number\" step=\".1\" formControlName=\"evapRate\">\r\n                </mat-form-field>\r\n                \r\n                <mat-form-field>\r\n                    <mat-label>Estimated Mash Tun Loss:</mat-label>\r\n                    <input matInput type=\"number\" step=\".1\" formControlName=\"mashTunLoss\">\r\n                </mat-form-field>\r\n                \r\n                <mat-form-field>\r\n                    <mat-label>Target OG:</mat-label>\r\n                    <input matInput type=\"number\" step=\".001\" formControlName=\"targetOg\">\r\n                </mat-form-field>\r\n                \r\n                <mat-form-field>\r\n                    <mat-label>Target Batch Volume (gal): </mat-label>\r\n                    <input matInput type=\"number\" step=\".1\" formControlName=\"batchVol\">\r\n                </mat-form-field>\r\n            </div>\r\n            \r\n            <div>\r\n                \r\n                <div>Strike Temp (F): {{strikeTemp}}</div>\r\n                <div>Strike Vol (gal): {{strikeVol}}</div>\r\n                <div>Absorption Vol (gal): {{grainWeight*absRate}}</div>\r\n                <div>First Runnings Vol (gal): {{firstRunningsVol}}</div>\r\n            </div>\r\n        </div>\r\n        \r\n        <div>\r\n            <div>\r\n                \r\n            </div>\r\n            \r\n            <div>\r\n                \r\n                <div>Sparge Vol (gal): {{spargeVol}}</div>\r\n                <div>Estimated Preboil Gravity: {{estPreboilGrav}}</div>\r\n            </div>\r\n        </div>\r\n    </mat-card>\r\n\r\n    <mat-toolbar color=\"primary\">\r\n        <span>Brew Corrections:</span>\r\n    </mat-toolbar>\r\n    <mat-card>\r\n        \r\n        <div formGroupName=\"brewCorrectionsFG\">\r\n            <mat-form-field>\r\n                <mat-label>Collected Pre Boil Volume (gal): </mat-label>\r\n                <input matInput type=\"number\" step=\".1\" formControlName=\"collectedPreboilVol\">\r\n            </mat-form-field>\r\n            \r\n            <mat-form-field>\r\n                <mat-label>Measured Gravity: </mat-label>\r\n                <input matInput type=\"number\" step=\".001\" formControlName=\"measuredGrav\">\r\n            </mat-form-field>\r\n            <mat-form-field>\r\n                <mat-label>Target Gravity: </mat-label>\r\n                <input matInput type=\"number\" step=\".001\" formControlName=\"targetGrav\">\r\n            </mat-form-field>\r\n        </div>\r\n        \r\n        <div>\r\n            <div>Light DME add (lbs): {{dmeAdd}}</div>\r\n            <div>Light DME add (oz): {{dmeAdd*16}}</div>\r\n        </div>\r\n    </mat-card>\r\n\r\n    <mat-toolbar color=\"primary\">\r\n        <span>Volume Measuring</span>\r\n    </mat-toolbar>\r\n    <mat-card>\r\n        \r\n        <div formGroupName=\"volMeasuringFG\">\r\n            <mat-form-field>\r\n                <mat-label>Current Weight (lbs):</mat-label>\r\n                <input matInput type=\"number\" formControlName=\"currWeight\">\r\n            </mat-form-field>\r\n            \r\n            <mat-form-field>\r\n                <mat-label>Empty Weight (lbs):</mat-label>\r\n                <input matInput type=\"number\" formControlName=\"emptyWeight\">\r\n            </mat-form-field>\r\n            \r\n            <mat-form-field>\r\n                <mat-label>Specific Gravity:</mat-label>\r\n                <input matInput type=\"number\" step=\".001\" formControlName=\"specificGrav\">\r\n            </mat-form-field>\r\n        </div>\r\n        \r\n        <div>\r\n            <div>Current Volume (gal):</div>\r\n            <div>{{currVol}}</div>\r\n        </div>\r\n    </mat-card>\r\n\r\n    <mat-toolbar color=\"primary\">\r\n        <span>Post Brew Calculations:</span>\r\n    </mat-toolbar>\r\n    <mat-card>\r\n        \r\n        <div formGroupName=\"postBrewFG\">\r\n            <mat-form-field>\r\n                <mat-label>Potential Gravity: </mat-label>\r\n                <input matInput type=\"number\" step=\".001\" formControlName=\"potentialGrav\">\r\n            </mat-form-field>\r\n            \r\n            <mat-form-field>\r\n                <mat-label>Measured OG: </mat-label>\r\n                <input matInput type=\"number\" step=\".001\" formControlName=\"measuredOG\">\r\n            </mat-form-field>\r\n            \r\n            <mat-form-field>\r\n                <mat-label>Measured FG: </mat-label>\r\n                <input matInput type=\"number\" step=\".001\" formControlName=\"measuredFG\">\r\n            </mat-form-field>\r\n        </div>\r\n        \r\n        <div>\r\n            <div>Efficiency: {{efficiency*100}}%</div>\r\n            <div>ABV: {{abv}}%</div>\r\n        </div>\r\n    </mat-card>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'post-brew',\r\n  templateUrl: './post-brew.component.html',\r\n  styleUrls: ['./post-brew.component.css']\r\n})\r\nexport class PostBrewComponent implements OnInit {\r\n\r\n  // Post Brew Calculations\r\n  // - Efficiency\r\n  // - ABV\r\n  public potentialGrav = 1.084;\r\n  public measuredOG = 1.059;\r\n  public measuredFG = 1.060;\r\n  public efficiency: number;\r\n  public abv: number;\r\n\r\n  public postBrewFG: FormGroup;\r\n\r\n  constructor(private dialog: MatDialog) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.postBrewFG = new FormGroup({\r\n      potentialGrav: new FormControl(this.potentialGrav),\r\n      measuredOG: new FormControl(this.measuredOG),\r\n      measuredFG: new FormControl(this.measuredFG)\r\n    });\r\n\r\n    this.postBrewFG.valueChanges.subscribe(val => {\r\n      this.onChanges();\r\n    });\r\n\r\n    this.onChanges();\r\n  }\r\n\r\n  public onChanges = (): void => {\r\n    let vals = this.postBrewFG.getRawValue();\r\n    this.measuredOG = vals.measuredOG;\r\n    this.measuredFG = vals.measuredFG;\r\n    this.potentialGrav = vals.potentialGrav;\r\n\r\n    this.efficiency = (1.0 - this.measuredOG) / (1.0 - this.potentialGrav);\r\n    this.abv = (this.measuredOG - this.measuredFG) * 131.25;\r\n  };\r\n\r\n  public isGT(a: any, b: any): boolean {\r\n    return a > b;\r\n  }\r\n\r\n  public isLT(a: any, b: any): boolean {\r\n    return a < b;\r\n  }\r\n\r\n  private convertToPts(grav: number) {\r\n    return (grav - 1.0) * 1000;\r\n  }\r\n\r\n  private convertToGrav(pts: number) {\r\n    return (pts / 1000.0) + 1.0;\r\n  }\r\n}","<mat-toolbar color=\"primary\">\r\n    <span>Post Brew Calculations:</span>\r\n</mat-toolbar>\r\n<mat-card>\r\n    \r\n    <div [formGroup]=\"postBrewFG\">\r\n        <mat-form-field>\r\n            <mat-label>Potential Gravity: </mat-label>\r\n            <input matInput type=\"number\" step=\".001\" formControlName=\"potentialGrav\">\r\n        </mat-form-field>\r\n        \r\n        <mat-form-field>\r\n            <mat-label>Measured OG: </mat-label>\r\n            <input matInput type=\"number\" step=\".001\" formControlName=\"measuredOG\">\r\n        </mat-form-field>\r\n        \r\n        <mat-form-field>\r\n            <mat-label>Measured FG: </mat-label>\r\n            <input matInput type=\"number\" step=\".001\" formControlName=\"measuredFG\">\r\n        </mat-form-field>\r\n    </div>\r\n    \r\n    <div>\r\n        <div>Efficiency: {{efficiency*100}}%</div>\r\n        <div>ABV: {{abv}}%</div>\r\n    </div>\r\n</mat-card>","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'misc',\r\n  templateUrl: './misc.component.html',\r\n  styleUrls: ['./misc.component.css']\r\n})\r\nexport class MiscComponent implements OnInit {\r\n\r\n  // Volume Measuring\r\n  // Assuming holding pot and standing on scale\r\n  // 8.32lbs/gal = 1kg/L\r\n  // vol = (currWeight-emptyWeight)/(8.32*specificGrav)\r\n  public currWeight = 12.0;\r\n  public emptyWeight = 3.0;\r\n  public specificGrav = 1.061;\r\n  public currVol: number;\r\n\r\n  public miscFG: FormGroup;\r\n\r\n\r\n  constructor(private dialog: MatDialog) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.miscFG = new FormGroup({\r\n      currWeight: new FormControl(this.currWeight),\r\n      emptyWeight: new FormControl(this.emptyWeight),\r\n      specificGrav: new FormControl(this.specificGrav),\r\n    });\r\n\r\n    this.miscFG.valueChanges.subscribe(val => {\r\n      this.onChanges();\r\n    });\r\n\r\n    this.onChanges();\r\n  }\r\n\r\n  public onChanges = (): void => {\r\n    let vals = this.miscFG.getRawValue();\r\n    this.currWeight = vals.currWeight;\r\n    this.emptyWeight = vals.emptyWeight;\r\n    this.specificGrav = vals.specificGrav;\r\n\r\n    this.currVol = (this.currWeight - this.emptyWeight) / (8.32 * this.specificGrav);\r\n  };\r\n\r\n  public isGT(a: any, b: any): boolean {\r\n    return a > b;\r\n  }\r\n\r\n  public isLT(a: any, b: any): boolean {\r\n    return a < b;\r\n  }\r\n\r\n  private convertToPts(grav: number) {\r\n    return (grav - 1.0) * 1000;\r\n  }\r\n\r\n  private convertToGrav(pts: number) {\r\n    return (pts / 1000.0) + 1.0;\r\n  }\r\n}","<mat-toolbar color=\"primary\">\r\n    <span>Volume Measuring</span>\r\n</mat-toolbar>\r\n<mat-card>\r\n    \r\n    <div [formGroup]=\"miscFG\">\r\n        <mat-form-field>\r\n            <mat-label>Current Weight (lbs):</mat-label>\r\n            <input matInput type=\"number\" formControlName=\"currWeight\">\r\n        </mat-form-field>\r\n        \r\n        <mat-form-field>\r\n            <mat-label>Empty Weight (lbs):</mat-label>\r\n            <input matInput type=\"number\" formControlName=\"emptyWeight\">\r\n        </mat-form-field>\r\n        \r\n        <mat-form-field>\r\n            <mat-label>Specific Gravity:</mat-label>\r\n            <input matInput type=\"number\" step=\".001\" formControlName=\"specificGrav\">\r\n        </mat-form-field>\r\n    </div>\r\n    \r\n    <div>\r\n        <div>Current Volume (gal):</div>\r\n        <div>{{currVol}}</div>\r\n    </div>\r\n</mat-card>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'brew-sidekick';\n}\n","<nav-bar></nav-bar>\r\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NgModule } from '@angular/core';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { LandingComponent } from './landing/landing.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NavBarComponent } from './nav-bar/nav-bar.component';\r\nimport { PreBrewComponent } from './pre-brew/pre-brew.component';\r\nimport { PostBrewComponent } from './post-brew/post-brew.component';\r\nimport { CorrectionsComponent } from './corrections/corrections.component';\r\nimport { MiscComponent } from './misc/misc.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LandingComponent,\r\n    NavBarComponent,\r\n    PreBrewComponent,\r\n    PostBrewComponent,\r\n    CorrectionsComponent,\r\n    MiscComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    AppRoutingModule,\r\n    MatCardModule,\r\n    MatInputModule,\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatFormFieldModule,\r\n    MatToolbarModule,\r\n    MatDialogModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n  ],\r\n  providers: [\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'pre-brew',\r\n  templateUrl: './pre-brew.component.html',\r\n  styleUrls: ['./pre-brew.component.css']\r\n})\r\nexport class PreBrewComponent implements OnInit {\r\n\r\n  // Pre Brew Calculations\r\n  // - Strike Temp\r\n  // - Strike Vol\r\n  // - Abs Vol\r\n  // - First Runnings Vol\r\n  // - Sparge Vol\r\n  // - Est Pre Boil Grav\r\n  // - Pre Boil Vol\r\n  public targetMashTemp = 152.0;\r\n  public grainWeight = 10.0;\r\n  public absRate = 0.125;\r\n  public evapRate = 0.5;\r\n  public mashTunLoss = 0.21;\r\n  public targetOg = 1.060;\r\n  public batchVol = 5.0;\r\n\r\n  public mashThickness: number; // .3125gal/lb\r\n  public grainTemp: number;\r\n  public strikeTemp: number; //(.2/(4*mashThickness))(targetMashTemp - grainTemp) + targetMashTemp\r\n  public strikeVol: number; // grainWeight*mashThickness\r\n  public absVol: number; // grainWeight * absRate\r\n  public preboilVol: number; // batchVol + evapRate * boilHrs\r\n  public firstRunningsVol: number; // strikeVol - (absVol + mashTunLoss)\r\n  public spargeVol: number; // preboilVol - firstRunningsVol\r\n  public estPreboilGrav: number; // (targetOg*targetVol)/preboilVol\r\n\r\n  public preBrewCalcsFG: FormGroup;\r\n\r\n  constructor(private dialog: MatDialog) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.preBrewCalcsFG = new FormGroup({\r\n      targetOg: new FormControl(this.targetOg),\r\n      batchVol: new FormControl(this.batchVol),\r\n      targetMashTemp: new FormControl(this.targetMashTemp),\r\n      grainWeight: new FormControl(this.grainWeight),\r\n      absRate: new FormControl(this.absRate),\r\n      mashTunLoss: new FormControl(this.mashTunLoss),\r\n      evapRate: new FormControl(this.evapRate),\r\n    });\r\n    this.mashThickness = .3125;\r\n    this.grainTemp = 68;\r\n\r\n    this.preBrewCalcsFG.valueChanges.subscribe(val => {\r\n      this.onChanges();\r\n    });\r\n\r\n    this.onChanges();\r\n  }\r\n\r\n  public onChanges = (): void => {\r\n    let vals = this.preBrewCalcsFG.getRawValue();\r\n    this.targetMashTemp = vals.targetMashTemp;\r\n    this.grainWeight = vals.grainWeight;\r\n    this.batchVol = vals.batchVol;\r\n    this.evapRate = vals.evapRate;\r\n    this.absRate = vals.absRate;\r\n    this.mashTunLoss = vals.mashTunLoss;\r\n    this.targetOg = vals.targetOg;\r\n\r\n    this.strikeTemp = (.2 / (4 * this.mashThickness)) * (this.targetMashTemp - this.grainTemp) + this.targetMashTemp;\r\n    this.strikeVol = this.grainWeight * this.mashThickness;\r\n    this.absVol = this.grainWeight * this.absRate;\r\n    this.preboilVol = 0 + this.batchVol + 1 * this.evapRate;\r\n    this.firstRunningsVol = this.strikeVol - (this.absVol + this.mashTunLoss);\r\n    this.spargeVol = this.preboilVol - this.firstRunningsVol;\r\n    let targetSG = this.convertToPts(this.targetOg);\r\n    let preboilSG = (targetSG * this.batchVol) / this.preboilVol;\r\n    this.estPreboilGrav = this.convertToGrav(preboilSG);\r\n  };\r\n\r\n  public isGT(a: any, b: any): boolean {\r\n    return a > b;\r\n  }\r\n\r\n  public isLT(a: any, b: any): boolean {\r\n    return a < b;\r\n  }\r\n\r\n  private convertToPts(grav: number) {\r\n    return (grav - 1.0) * 1000;\r\n  }\r\n\r\n  private convertToGrav(pts: number) {\r\n    return (pts / 1000.0) + 1.0;\r\n  }\r\n}","<mat-toolbar color=\"primary\">\r\n    <span>Pre Brew Calculations:</span>\r\n</mat-toolbar>\r\n\r\n<mat-card>\r\n    \r\n    <div>\r\n        <div [formGroup]=\"preBrewCalcsFG\">\r\n            <mat-form-field>\r\n                <mat-label>Target Mash Temp (Farenheit):</mat-label>\r\n                <input matInput type=\"number\" formControlName=\"targetMashTemp\">\r\n            </mat-form-field>\r\n            \r\n            <mat-form-field>\r\n                <mat-label>Grain Weight (lbs.):</mat-label>\r\n                <input matInput type=\"number\" formControlName=\"grainWeight\">\r\n            </mat-form-field>\r\n            \r\n            <mat-form-field>\r\n                <mat-label>Estimated Absorption Rate (gal/lb):</mat-label>\r\n                <input matInput type=\"number\" step=\".1\" formControlName=\"absRate\">\r\n            </mat-form-field>\r\n            \r\n            <mat-form-field>\r\n                <mat-label>Estimated Evaporation Rate (gal/hr):</mat-label>\r\n                <input matInput type=\"number\" step=\".1\" formControlName=\"evapRate\">\r\n            </mat-form-field>\r\n            \r\n            <mat-form-field>\r\n                <mat-label>Estimated Mash Tun Loss:</mat-label>\r\n                <input matInput type=\"number\" step=\".1\" formControlName=\"mashTunLoss\">\r\n            </mat-form-field>\r\n            \r\n            <mat-form-field>\r\n                <mat-label>Target OG:</mat-label>\r\n                <input matInput type=\"number\" step=\".001\" formControlName=\"targetOg\">\r\n            </mat-form-field>\r\n            \r\n            <mat-form-field>\r\n                <mat-label>Target Batch Volume (gal): </mat-label>\r\n                <input matInput type=\"number\" step=\".1\" formControlName=\"batchVol\">\r\n            </mat-form-field>\r\n        </div>\r\n        \r\n        <div>\r\n            \r\n            <div>Strike Temp (F): {{strikeTemp}}</div>\r\n            <div>Strike Vol (gal): {{strikeVol}}</div>\r\n            <div>Absorption Vol (gal): {{grainWeight*absRate}}</div>\r\n            <div>First Runnings Vol (gal): {{firstRunningsVol}}</div>\r\n        </div>\r\n    </div>\r\n    \r\n    <div>\r\n        <div>\r\n            \r\n        </div>\r\n        \r\n        <div>\r\n            \r\n            <div>Sparge Vol (gal): {{spargeVol}}</div>\r\n            <div>Estimated Preboil Gravity: {{estPreboilGrav}}</div>\r\n        </div>\r\n    </div>\r\n</mat-card>","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'corrections',\r\n  templateUrl: './corrections.component.html',\r\n  styleUrls: ['./corrections.component.css']\r\n})\r\nexport class CorrectionsComponent implements OnInit {\r\n\r\n  // Brew Corrections\r\n  // - Raise Pre Boil Grav\r\n  public collectedPreboilVol = 6.0;\r\n  public measuredGrav = 1.045;\r\n  public targetGrav = 1.065;\r\n  // Weight of addition = (Volume of wort * (Target gravity – Measured gravity)) / Extract potential points of addition\r\n  // Light DME Potential Extract: 1.045\r\n  public dmeAdd: number;\r\n\r\n  public correctionsFG: FormGroup;\r\n\r\n\r\n  constructor(private dialog: MatDialog) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.correctionsFG = new FormGroup({\r\n      collectedPreboilVol: new FormControl(this.collectedPreboilVol),\r\n      measuredGrav: new FormControl(this.measuredGrav),\r\n      targetGrav: new FormControl(this.targetGrav),\r\n    });\r\n\r\n    this.correctionsFG.valueChanges.subscribe(val => {\r\n      this.onChanges();\r\n    });\r\n\r\n    this.onChanges();\r\n  }\r\n\r\n  public onChanges = (): void => {\r\n    let vals = this.correctionsFG.getRawValue();\r\n    this.collectedPreboilVol = vals.collectedPreboilVol;\r\n    this.targetGrav = vals.targetGrav;\r\n    this.measuredGrav = vals.measuredGrav;\r\n\r\n    // Weight of addition = (Volume of wort * (Target gravity – Measured gravity)) / Extract potential points of addition\r\n    this.dmeAdd = (this.collectedPreboilVol * (this.convertToPts(this.targetGrav) - this.convertToPts(this.measuredGrav))) / 45;\r\n  };\r\n\r\n  public isGT(a: any, b: any): boolean {\r\n    return a > b;\r\n  }\r\n\r\n  public isLT(a: any, b: any): boolean {\r\n    return a < b;\r\n  }\r\n\r\n  private convertToPts(grav: number) {\r\n    return (grav - 1.0) * 1000;\r\n  }\r\n\r\n  private convertToGrav(pts: number) {\r\n    return (pts / 1000.0) + 1.0;\r\n  }\r\n}","<mat-toolbar color=\"primary\">\r\n    <span>Brew Corrections:</span>\r\n</mat-toolbar>\r\n<mat-card>\r\n    \r\n    <div [formGroup]=\"correctionsFG\">\r\n        <mat-form-field>\r\n            <mat-label>Collected Pre Boil Volume (gal): </mat-label>\r\n            <input matInput type=\"number\" step=\".1\" formControlName=\"collectedPreboilVol\">\r\n        </mat-form-field>\r\n        \r\n        <mat-form-field>\r\n            <mat-label>Measured Gravity: </mat-label>\r\n            <input matInput type=\"number\" step=\".001\" formControlName=\"measuredGrav\">\r\n        </mat-form-field>\r\n        <mat-form-field>\r\n            <mat-label>Target Gravity: </mat-label>\r\n            <input matInput type=\"number\" step=\".001\" formControlName=\"targetGrav\">\r\n        </mat-form-field>\r\n    </div>\r\n    \r\n    <div>\r\n        <div>Light DME add (lbs): {{dmeAdd}}</div>\r\n        <div>Light DME add (oz): {{dmeAdd*16}}</div>\r\n    </div>\r\n</mat-card>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CorrectionsComponent } from './corrections/corrections.component';\r\nimport { LandingComponent } from './landing/landing.component';\r\nimport { MiscComponent } from './misc/misc.component';\r\nimport { PostBrewComponent } from './post-brew/post-brew.component';\r\nimport { PreBrewComponent } from './pre-brew/pre-brew.component';\r\n\r\nconst appRoutes: Routes = [\r\n    {path: '', component: PreBrewComponent, pathMatch: 'full'},\r\n    {path: 'pre-brew', component: PreBrewComponent, pathMatch: 'full'},\r\n    {path: 'post-brew', component: PostBrewComponent, pathMatch: 'full'},\r\n    {path: 'corrections', component: CorrectionsComponent, pathMatch: 'full'},\r\n    {path: 'misc', component: MiscComponent, pathMatch: 'full'},\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forRoot(appRoutes)\r\n    ],\r\n    exports: [\r\n        RouterModule\r\n    ]\r\n})\r\nexport class AppRoutingModule {\r\n\r\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}